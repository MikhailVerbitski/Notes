результаты утилит из потока вывода(output) можно передавать другой/той_же утилите с помощью pipe/вертикальной_черты(|)
cat file file1 | grep -n 'cat.*'
dpkg --list | grep -n code | cat -n > test.txt

require 'pry'
binding.pry - point

touch {name}        создать файл
xdg-open {file}     открывает файл программой по умолчанию для расширения указанного файла
ctr + z - background
fg        вернуть из background
dpkg --list
scp (что) (куда)

pry -I. -r src/db/sequel_init.rb
a = Models::Alkemics.first
a.data
Yaml.load(a.data)

wget    ?
tr      ?
pr      ?
colum   ?
scp     ?
pwd.    ?
whoami. ?


-----------------------------------------------------------------------------------------------------------------------------------------------------------cat
cat Перенаправляет/объединяет потоки в указанный с помощью (>,>>) в противном случае output
>   перезаписать
>>  дописать

cat опции файл1 файл2 ...

-b - нумеровать только непустые строки;
-E - показывать символ $ в конце каждой строки;
-n - нумеровать все строки;
-s - удалять пустые повторяющиеся строки;
-T - отображать табуляции в виде ^I;
-h - отобразить справку;
-v - версия утилиты.

Пример
cat > file.txt                          записать в файл текст из потока ввода input
cat >> file.txt                         дописать в файл...
cat file.txt file1.txt >> file2.txt     дописать в file2 данные из file и fiel1
cat -n file.txt > file2.txt             записать file в file2 с нумерацией строк
--------------------------------------------------------------------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------------------------------------------------------------------tr
заменяет слова с строке

tr [КЛЮЧ]... НАБОР1 [НАБОР2]

-c, -C      --complement	        Сначала получить дополнение НАБОРА1
-d          --delete	            Удалить знаки из НАБОРА2, не превращать
-s          --squeeze-repeats	    Замещать последовательность знаков, которые повторяются, из перечисленных в последнем НАБОРЕ, на один такой знак
-t,         --truncate-set1         Сначала сократить НАБОР1 до размеров НАБОРА2


\HHH	Знак в восьмеричной кодировке (с трех цифр ННН)
\\	Обратный слэш
\b	Забой
\f	Перевод страницы
\n	Начать с новой строки
\r	Возврат каретки
\t	Горизонтальная табуляция
\v	Вертикальная табуляция
ЗНАК1-ЗНАК2	Все знаки от ЗНАК1 до ЗНАК2 в порядке возрастания
[ЗНАК*]	ЗНАК заполняет НАБОР2 до длины НАБОРА1
[ЗНАК*ЧИСЛО]	Указанное ЧИСЛО одинаковых ЗНАКОВ; ЧИСЛО восьмиричных, если начинается с 0
[:alnum:]	Все буквы и цифры
[:alpha:]	Все буквы
[:blank:]	Все горизонтальные пробельные символы
[:cntrl:]	Все управляющие знаки
[:digit:]	Все цифры
[:graph:]	Все печатаемые знаки, исключая пробел
[:lower:]	Все маленькие буквы
[:print:]	Все печатаемые знаки, включая пробел
[:punct:]	Все знаки пунктуации
[:space:]	Все вертикальные и горизонтальные пробельные знаки
[:upper:]	Все большие буквы
[:xdigit:]	Все шестнадцатиричные цифры
[=ЗНАК=]	Все знаки, эквивалентные ЗНАКУ
--------------------------------------------------------------------------------------------------------------------------------------------------------------



-----------------------------------------------------------------------------------------------------------------------------------------------------------sed
принимает на входе текст, выполняет заданные операции над каждой строкой (если не задано другое) и выводит модифицированный текст

[диапазон строк]/p                          Печать [указанного диапазона строк]
[диапазон строк]/d                          Удалить [указанный диапазон строк]
8d                                          Удалить 8-ю строку.
s/pattern1/pattern2/                        Заменить первое встреченное соответствие шаблону pattern1, в строке, на pattern2
[диапазон строк]/s/pattern1/pattern2/       Заменить первое встреченное соответствие шаблону pattern1, на pattern2, в указанном диапазоне строк
[диапазон строк]/y/pattern1/pattern2/       заменить любые символы из шаблона pattern1 на соответствующие символы из pattern2, в указанном диапазоне строк (эквивалент команды tr)
g                                           Операция выполняется над всеми найденными соответствиями внутри каждой из заданных строк
--------------------------------------------------------------------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------------------------------------------------------------grep
grep - поиск образца в файле

Usage: grep [OPTION]... PATTERNS [FILE]...

Options:
-b	Предваряет каждую строку номером блока, в котором она была найдена. Это может пригодиться при поиске блоков по контексту (блоки нумеруются с 0).
-c	Выдает только количество строк, содержащих образец.
-h	Предотвращает выдачу имени файла, содержащего сопоставившуюся строку, перед собственно строкой. Используется при поиске по нескольким файлам.
-i	Игнорирует регистр символов при сравнениях.
-l	Выдает только имена файлов, содержащих сопоставившиеся строки, по одному в строке. Если образец найден в нескольких строках файла, имя файла не повторяется.
-n	Выдает перед каждой строкой ее номер в файле (строки нумеруются с 1).
-s	Подавляет выдачу сообщений о не существующих или недоступных для чтения файлах.
-v	Выдает все строки, за исключением содержащих образец.
-w	Ищет выражение как слово, как если бы оно было окружено метасимволами \< и \>.
-z  строка данных заканчивается на 0 байт, а не на новую строку
--------------------------------------------------------------------------------------------------------------------------------------------------------------



---------------------------------------------------------------------------------------------------------------------------------------------------------alias
alias используется для создания альтернативных версий обычных команд. Можно сделать все свои алиасы постоянными. 
Для этого вы можете определить алиасы путем включения их в свой локальный файл ~/.bashrc.

alias alias_command_name='commands'

alias                           посмотреть какие псевдонимы linux команд уже заданны в вашей системе
unalias {name}                  Удалить созданный alias
echo "{command}" >> .bashrc     заготовка для добавления алиасса в файл bashrc
--------------------------------------------------------------------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------------------------------------------------------------echo
echo используется для вывода строки в указанный поток (>,>>), по умолчанию поток output

echo опции строка

Options:
-n - не выводить перевод строки;
-e - включить поддержку вывода Escape последовательностей;
-E - отключить интерпретацию Escape последовательностей.

Это все опции, если включена опция -e, то вы можете использовать такие Escape последовательности для вставки специальных символов:
\c - удалить перевод строки;
\t - горизонтальная табуляция;
\v - вертикальная табуляция;
\b - удалить предыдущий символ;
\n - перевод строки;
\r - символ возврата каретки в начало строки.
--------------------------------------------------------------------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------------------------------------------------------------------ls
Отображает содержимое папки

ls опции /путь/к/папке

-a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;
-A - не отображать ссылку на текущую папку и корневую папку . и ..;
--author - выводить создателя файла в режиме подробного списка;
-b - выводить Escape последовательности вместо непечатаемых символов;
--block-size - выводить размер каталога или файла в определенной единице измерения, например, мегабайтах, гигабайтах или килобайтах;
-B - не выводить резервные копии, их имена начинаются с ~;
-c - сортировать файлы по времени модификации или создания, сначала будут выведены новые файлы;
-C - выводить колонками;
--color - включить цветной режим вывода, автоматически активирована во многих дистрибутивах;
-d - выводить только директории, без их содержимого, полезно при рекурсивном выводе;
-D - использовать режим вывода, совместимый с Emacs;
-f - не сортировать;
-F - показывать тип объекта, к каждому объекту будет добавлен один из специализированных символов */=>@|;
--full-time - показывать подробную информацию, плюс вся информация о времени в формате ISO;
-g - показывать подробную информацию, но кроме владельца файла;
--group-directories-first - сначала отображать директории, а уже потом файлы;
-G - не выводить имена групп;
-h - выводить размеры папок в удобном для чтения формате;
-H - открывать символические ссылки при рекурсивном использовании;
--hide - не отображать файлы, которые начинаются с указанного символа;
-i - отображать номер индекса inode, в которой хранится этот файл;
-l - выводить подробный список, в котором будет отображаться владелец, группа, дата создания, размер и другие параметры;
-L - для символических ссылок отображать информацию о файле, на который они ссылаются;
-m - разделять элементы списка запятой;
-n - выводить UID и GID вместо имени и группы пользователя;
-N - выводить имена как есть, не обрабатывать контролирующие последовательности;
-Q - брать имена папок и файлов в кавычки;
-r - обратный порядок сортировки;
-R - рекурсивно отображать содержимое поддиректорий;
-s - выводить размер файла в блоках;
-S - сортировать по размеру, сначала большие;
-t - сортировать по времени последней модификации;
-u - сортировать по времени последнего доступа;
-U - не сортировать;
-X - сортировать по алфавиту;
-Z - отображать информацию о расширениях SELinux;
-1 - отображать один файл на одну строку.

-lS  Вывод содержимого директории С упорядочиванием по размеру:
-rt  Список файлов отсортированных по дате Новые файлы будут снизу

-lh

мой шаблон      ls -1 -a -A -c --color --group-directories-first -s -h
--------------------------------------------------------------------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------------------------------------------------------------head
head — утилита в UNIX и UNIX-подобных системах, выводящая первые n строк из файла, по умолчанию n равно 10:

head {file}
| head

-n  Изменить количество выводимых строк, если отрицательное, то выводит (количество - число)
--------------------------------------------------------------------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------------------------------------------------------------tail
tail — утилита в UNIX, выводящая несколько (по умолчанию 10) последних строк из файла.

tail [параметры] имя_файла

-n  зменить количество выводимых строк
--------------------------------------------------------------------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------------------------------------------------------------watch
watch — unix-утилита, которая запускает определённую программу циклически бесконечно через указанный интервал. 
Завершить программу можно с помощью <CTRL-C>

watch [-d] [-n sec] COMMAND [args]      где [args] - опциональные аргументы вызываемой программы COMMAND

-n      интервал в секундах (по умолчанию 2)
-d      включает подсветку изменений в выводе относительно предыдущего запуска. 
--------------------------------------------------------------------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------------------------------------------------------------find
Find - это одна из наиболее важных и часто используемых утилит системы Linux. 
Это команда для поиска файлов и каталогов на основе специальных условий. 
Ее можно использовать в различных обстоятельствах, например, для поиска файлов по разрешениям, 
владельцам, группам, типу, размеру и другим подобным критериям.

find [папка] [параметры] критерий шаблон [действие]

Параметры:
-P никогда не открывать символические ссылки
-L - получает информацию о файлах по символическим ссылкам. Важно для дальнейшей обработки, чтобы обрабатывалась не ссылка, а сам файл.
-maxdepth - максимальная глубина поиска по подкаталогам, для поиска только в текущем каталоге установите 1.
-depth - искать сначала в текущем каталоге, а потом в подкаталогах
-mount искать файлы только в этой файловой системе.
-version - показать версию утилиты find
-print - выводить полные имена файлов
-type f - искать только файлы
-type d - поиск папки в Linux

Критерии:
-name - поиск файлов по имени
-perm - поиск файлов в Linux по режиму доступа
-user - поиск файлов по владельцу
-group - поиск по группе
-mtime - поиск по времени модификации файла
-atime - поиск файлов по дате последнего чтения
-nogroup - поиск файлов, не принадлежащих ни одной группе
-nouser - поиск файлов без владельцев
-newer - найти файлы новее чем указанный
-size - поиск файлов в Linux по их размеру
--------------------------------------------------------------------------------------------------------------------------------------------------------------
